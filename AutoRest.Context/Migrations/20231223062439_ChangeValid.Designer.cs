// <auto-generated />
using System;
using AutoRest.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AutoRest.Context.Migrations
{
    [DbContext(typeof(AutoRestContext))]
    [Migration("20231223062439_ChangeValid")]
    partial class ChangeValid
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AutoRest.Context.Contracts.Models.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("EmployeeType")
                        .HasColumnType("int");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeType")
                        .HasDatabaseName("IX_Employee_EmployeeType");

                    b.HasIndex("PersonId")
                        .IsUnique()
                        .HasDatabaseName("IX_Employee_PersonId")
                        .HasFilter("DeletedAt is null");

                    b.ToTable("Employees", (string)null);
                });

            modelBuilder.Entity("AutoRest.Context.Contracts.Models.LoyaltyCard", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("LoyaltyCardType")
                        .HasColumnType("int");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("LoyaltyCardType")
                        .HasDatabaseName("IX_LoyaltyCard_LoyaltyCardType");

                    b.ToTable("LoyaltyCards", (string)null);
                });

            modelBuilder.Entity("AutoRest.Context.Contracts.Models.MenuItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Title")
                        .HasDatabaseName("IX_MenuItem_Title");

                    b.ToTable("MenuItems", (string)null);
                });

            modelBuilder.Entity("AutoRest.Context.Contracts.Models.OrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("EmployeeCashierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EmployeeCashierId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeWaiterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("LoyaltyCardId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MenuItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("OrderStatus")
                        .HasColumnType("bit");

                    b.Property<Guid>("TableId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_OrderItem_CreatedAt");

                    b.HasIndex("EmployeeCashierId");

                    b.HasIndex("EmployeeCashierId1");

                    b.HasIndex("LoyaltyCardId");

                    b.HasIndex("MenuItemId");

                    b.HasIndex("TableId");

                    b.ToTable("OrderItems", (string)null);
                });

            modelBuilder.Entity("AutoRest.Context.Contracts.Models.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Patronymic")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("LastName")
                        .HasDatabaseName("IX_Person_LastName");

                    b.ToTable("Persons", (string)null);
                });

            modelBuilder.Entity("AutoRest.Context.Contracts.Models.Table", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique()
                        .HasDatabaseName("IX_Table_Number")
                        .HasFilter("DeletedAt is null");

                    b.ToTable("Tables", (string)null);
                });

            modelBuilder.Entity("AutoRest.Context.Contracts.Models.Employee", b =>
                {
                    b.HasOne("AutoRest.Context.Contracts.Models.Person", "Person")
                        .WithMany("Employee")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("AutoRest.Context.Contracts.Models.OrderItem", b =>
                {
                    b.HasOne("AutoRest.Context.Contracts.Models.Employee", "EmployeeWaiter")
                        .WithMany("OrderItem")
                        .HasForeignKey("EmployeeCashierId");

                    b.HasOne("AutoRest.Context.Contracts.Models.Employee", "EmployeeCashier")
                        .WithMany()
                        .HasForeignKey("EmployeeCashierId1");

                    b.HasOne("AutoRest.Context.Contracts.Models.LoyaltyCard", "LoyaltyCard")
                        .WithMany("OrderItem")
                        .HasForeignKey("LoyaltyCardId");

                    b.HasOne("AutoRest.Context.Contracts.Models.MenuItem", "MenuItem")
                        .WithMany("OrderItem")
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoRest.Context.Contracts.Models.Table", "Table")
                        .WithMany("OrderItem")
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeCashier");

                    b.Navigation("EmployeeWaiter");

                    b.Navigation("LoyaltyCard");

                    b.Navigation("MenuItem");

                    b.Navigation("Table");
                });

            modelBuilder.Entity("AutoRest.Context.Contracts.Models.Employee", b =>
                {
                    b.Navigation("OrderItem");
                });

            modelBuilder.Entity("AutoRest.Context.Contracts.Models.LoyaltyCard", b =>
                {
                    b.Navigation("OrderItem");
                });

            modelBuilder.Entity("AutoRest.Context.Contracts.Models.MenuItem", b =>
                {
                    b.Navigation("OrderItem");
                });

            modelBuilder.Entity("AutoRest.Context.Contracts.Models.Person", b =>
                {
                    b.Navigation("Employee");
                });

            modelBuilder.Entity("AutoRest.Context.Contracts.Models.Table", b =>
                {
                    b.Navigation("OrderItem");
                });
#pragma warning restore 612, 618
        }
    }
}
